@model WebApplication1.Models.Movies.VideoListViewModel
@{
    ViewData["Title"] = "Video List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h1 class="text-center mb-4">@Model.VideoListModels.FirstOrDefault()?.comp_name Movies</h1>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Title</th>
                <th>Popularity</th>
                <th>Revenue</th>
                <th>Runtime</th>
                <th>Average Vote</th>
                <th>Number of Votes</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.VideoListModels)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.title)</td>
                    <td>@Html.DisplayFor(modelItem => item.popularity)</td>
                    <td>@Html.DisplayFor(modelItem => item.revenue)</td>
                    <td>@Html.DisplayFor(modelItem => item.runtime)</td>
                    <td>@Html.DisplayFor(modelItem => item.votes_avg)</td>
                    <td>@Html.DisplayFor(modelItem => item.votes_count)</td>
                    <td>
                        <a class="btn btn-outline-info btn-sm" asp-action="Keywords" asp-route-movie_id="@item.movie_id">
                            View Keywords
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination mt-4 d-flex justify-content-center">
        @if (Model.total_pages > 1)
        {
            @if (Model.current_page > 3)
            {
                <a class="btn btn-outline-primary mx-1" href="@Url.Action("VideoList", new { page = 1 })">First</a>
                <span class="mx-1">...</span>
            }
            
            {
                int maxPagesToShow = 5;
                int startPage = Math.Max(1, Model.current_page - 2);
                int endPage = Math.Min(Model.total_pages, startPage + maxPagesToShow - 1);

                for (int i = startPage; i <= endPage; i++)
                {
                    if (i == Model.current_page)
                    {
                        <span class="btn btn-primary mx-1 disabled">@i</span>
                    }
                    else
                    {
                        <a class="btn btn-outline-primary mx-1" href="@Url.Action("VideoList", new { page = i })">@i</a>
                    }
                }
            }


            if (Model.current_page < Model.total_pages - 2)
            {
                <span class="mx-1">...</span>
                <a class="btn btn-outline-primary mx-1" href="@Url.Action("VideoList", new { page = Model.total_pages })">Last</a>
            }
        }
    </div>
</div>
